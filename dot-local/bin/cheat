#!/bin/bash

# File paths
CONFIG_H_PATH="$HOME/.local/src/wm/config.h"
ST_CONFIG_PATH="$HOME/.local/src/st/config.h"
LF_CONFIG_PATH="$HOME/.config/lf/lfrc"
BM_DIRS_PATH="$HOME/.config/shell/bm-dirs"
BM_FILES_PATH="$HOME/.config/shell/bm-files"

# Color definitions
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Regular expression patterns
constants_regex="#define\s+(\w+)\s+(.*)"
keys_regex="\{\s*([^,]+),\s*([^,]+),\s*([^,]+),\s*(\{.*\})\s*\}"

# Utility functions for repeated operations
print_header () {
    printf "\n%b\n" "${YELLOW}$1:${NC}"
    printf "${GREEN}%-30s ${BLUE}%-25s ${RED}%-20s ${NC}%s\n" "$2" "$3" "$4" "$5"
    printf '%*s\n' "$(tput cols)" '' | tr ' ' '-'
}

print_welcome () {
    figlet -f small -cDtW dwm-cheatsheet
}

# Constants Overview
get_constants () {
    cowsay -f tux "Source code at: $CONFIG_H_PATH"
    print_header "Constants" "Name" "Value" "" ""
    [[ ! -f "$CONFIG_H_PATH" ]] && echo "File not found: $CONFIG_H_PATH" && return

    while read -r line; do
        if [[ $line =~ $constants_regex ]]; then
            printf "${GREEN}%-30s ${BLUE}%s${NC}\n" "${BASH_REMATCH[1]}" "${BASH_REMATCH[2]}"
        fi
    done < "$CONFIG_H_PATH"
}

# Keybindings Overview
get_keybindings () {
    print_header "Keybindings" "Modifier" "Key" "Function" "Argument"
    [[ ! -f "$CONFIG_H_PATH" ]] && echo "File not found: $CONFIG_H_PATH" && return

    awk -v red="$RED" -v green="$GREEN" -v blue="$BLUE" -v nc="$NC" '
    /^\{ MODKEY/ || /^\{ ShiftMask/ || /^\{ MODKEY|ShiftMask/ || /^\{ 0,/ {
        gsub(/[\{\}]/, ""); gsub(/[ \t]+/, " ")
        n = split($0, fields, ",")
        printf "%s%-30s%s %-25s%s %-20s%s %s\n", green, fields[1], blue, fields[2], red, fields[3], nc, (n >= 4 ? fields[4] : "")
    }' "$CONFIG_H_PATH"
}

# Shortcuts Overview for ST
get_shortcuts () {
    cowsay -f tux "Source code at: $ST_CONFIG_PATH"
    printf "\n%b\n" "${YELLOW}Shortcuts:${NC}"
    printf "${GREEN}%-40s ${BLUE}%-35s ${RED}%-30s ${NC}%-25s ${NC}%s\n" "Modifier" "Key" "Function" "Argument" "Explanation"
    printf '%*s\n' "$(tput cols)" '' | tr ' ' '-'

    # Use awk to extract and print the keybindings
    awk -v red="$RED" -v green="$GREEN" -v blue="$BLUE" -v nc="$NC" '
    /^\s*\{ MODKEY/ || /^\s*\{ ShiftMask/ || /^\s*\{ XK_ANY_MOD/ || /^\s*\{ TERMMOD/ || /^\s*\{ ControlMask/ || /^\s*\{ XK_NO_MOD/ || /^\s*\{ 0,/ {
        # Clean up the line by removing spaces, tabs, and braces
        gsub(/[\{\}]/, "")
        gsub(/[ \t]+/, " ")

        # Split the line into fields based on the comma separator
        n = split($0, fields, ",")

        # Only print if enough fields are available
        if (n >= 3) {
            # Fields captured by split:
            # 1 - Mask
            # 2 - Keysym
            # 3 - Function
            # 4 - Argument (optional)
            # 5 - Explanation (optional)

            # Remove unnecessary characters from fields[5] if present
            if (n >= 5) {
                gsub(/ \/\* /, "", fields[5])
                gsub(/ \*\//, "", fields[5])
            }

            # Print the Modifier, Key, Function, and Argument (if available)
            printf "%s%-40s %s%-35s%s %-30s %s%-25s %s \n",
            green, fields[1],
            blue, fields[2],
            red, fields[3],
            nc, (n >= 4 ? fields[4] : " "),
            nc, (n >= 5 ? fields[5] : " ")
        }
    }' "$ST_CONFIG_PATH"
}

# LF Bindings Overview
get_lf_bindings () {
    cowsay -f tux "Source code at: $LF_CONFIG_PATH"
    print_header "LF Bindings" "Modifier" "Key"
    [[ ! -f "$LF_CONFIG_PATH" ]] && echo "File not found: $LF_CONFIG_PATH" && return

    awk -v green="$GREEN" -v red="$RED" -v nc="$NC" '
    /^map/ {
        printf "%s%-40s %s", green, $2, red
        for (i = 3; i <= NF; i++) printf "%s ", $i
        printf "%s\n", nc
    }' "$LF_CONFIG_PATH"
}

# Bookmarked Directories
get_bm_dirs () {
    cowsay -f tux "Source code at: $BM_DIRS_PATH"
    print_header "Bookmarked Directories" "Modifier" "Key"
    [[ ! -f "$BM_DIRS_PATH" ]] && echo "File not found: $BM_DIRS_PATH" && return

    awk -v green="$GREEN" -v red="$RED" -v nc="$NC" '{
        gsub(/#.*/, ""); if (NF > 0) printf "%s%-40s %s%-30s %s\n", green, $1, red, $2, nc
    }' "$BM_DIRS_PATH"
}

# Bookmarked Files
get_bm_files () {
    cowsay -f tux "Source code at: $BM_FILES_PATH"
    print_header "Bookmarked Files" "Modifier" "Key"
    [[ ! -f "$BM_FILES_PATH" ]] && echo "File not found: $BM_FILES_PATH" && return

    awk -v green="$GREEN" -v red="$RED" -v nc="$NC" '{
        gsub(/#.*/, ""); if (NF > 0) printf "%s%-40s %s%-30s %s\n", green, $1, red, $2, nc
    }' "$BM_FILES_PATH"
}

# Script Control Flow
case "$1" in
    dwm) (print_welcome && get_constants && get_keybindings) | less ;;
    st) (print_welcome && get_shortcuts) | less ;;
    lf) get_lf_bindings | less ;;
    bm) (print_welcome && get_bm_dirs && get_bm_files) | less ;;
    help)
        printf "\n%b\n" "${RED}Usage:${NC}"
        printf "%b\n" "$0 {dwm|st|lf|bm|help}"
        ;;
    @)
        (print_welcome && get_constants && get_keybindings && get_shortcuts && get_lf_bindings && get_bm_dirs && get_bm_files) | less
        ;;
    *)
        (print_welcome && get_constants && get_keybindings && get_shortcuts && get_lf_bindings && get_bm_dirs && get_bm_files) | grep -i "$1"
        ;;
esac
